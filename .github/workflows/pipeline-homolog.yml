# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: SHOP BEER HOMOLOGY

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - homolog
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn -B package --file pom.xml

#      - name: Publish to GitHub Packages Apache Maven
#        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#        env:
#          GITHUB_TOKEN: ${{ github.token }}

      #Maven cache
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
        #Configura usuário do git.
      - name: Configure Git user
        run: |
          git config user.email "rafaelvieirasantos2006@hotmail.com"
          git config user.name "rafaelrok"

      #Busca versão do projeto no POM.
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      #Remove '-SNAPSHOT' da versao atual, para versionar a imagem docker.
      - name: Remove snapshot from version
        id: prep_version
        run: |
          export clean_version=$(echo ${{ steps.project.outputs.version }} |  sed 's/[^0-9\.]//g')
          echo ::set-output name=version::$clean_version

      #Apply permissions to '-SNAPSHOT'
      - name: Grant write permission to the package
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker run --rm ghcr.io/docker/metadata-action:latest --config .github/docker/metadata.yml --image docker.pkg.github.com/${{ github.repository }}/shopbeer-v:latest

      #Build maven.
      - name: Publish to GitHub Packages Apache Maven
        run: mvn clean deploy -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Darguments=-DskipITs -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
#          GITHUB_TOKEN: ${{ secrets.AUTH_GITHUB }}

      #Build Docker
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.AUTH_DOCKER }}

      - name: Publish to GitHub Packages Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.pkg.github.com/${{ github.repository }}/shopbeer-v:latest